# Load local environment variables
source "$HOME/.env.local"

# Add common executable folders to path
export PATH="/usr/local/bin:/usr/local/sbin:$PATH"

unsetopt correct_all

# Set up Python paths (before powerline)
if [ "$(uname 2> /dev/null)" == "Darwin" ]; then
  export PATH="$PATH:$HOME/Library/Python/3.7/bin"
  export PATH="$HOME/miniconda3/bin:$PATH"
fi
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PATH="$PATH:$HOME/.local/bin"
if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

# Set up powerline prompt
function powerline_precmd() {
  PS1="$(powerline-shell --shell zsh $?)"
}
function install_powerline_precmd() {
  for s in "${precmd_functions[@]}"; do
    if [ "$s" = "powerline_precmd" ]; then
      return
    fi
  done
  precmd_functions+=(powerline_precmd)
}
if [ "$TERM" != "linux" ]; then
  install_powerline_precmd
fi

if [ "$(uname 2> /dev/null)" == "Linux" ]; then
  # Set up directory listing coloring
  if [ -f ~/.dircolors ]; then
    eval `dircolors ~/.dircolors`
  fi
fi

# Set up vim mode on command line
function zle-line-init zle-keymap-select {
  VIM_PROMPT="%{$fg_bold[yellow]%} [% NORMAL]%  %{$reset_color%}"
  RPS1="${${KEYMAP/vicmd/$VIM_PROMPT}/(main|viins)/} $EPS1"
  zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

# Allow jj/jk to enter normal mode
export KEYTIMEOUT=40
bindkey -M viins "jj" vi-cmd-mode
bindkey -M viins "jk" vi-cmd-mode

# Load NVM for Node.js
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

if [ "$(uname 2> /dev/null)" == "Linux" ]; then
  # Set up linuxbrew package manager
  eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

  # Set up default display environment
  export DISPLAY=localhost:0.0
fi

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Load RVM for Ruby
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
if command -v rbenv 1>/dev/null 2>&1; then
  eval "$(rbenv init -)"
fi
export PATH="$PATH:$HOME/.rvm/bin"

# if [ "$(uname 2> /dev/null)" == "Linux" ]; then
  # if [ -t 1 ]; then
    # cd $HOME
  # fi
# fi

